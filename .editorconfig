
root = true

[*]
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true
indent_style = space
indent_size = 2
resharper_enforce_line_ending_style = true

[**.{cs,cshtml}]
indent_size = 4

[**.cs]
# Prefer explicit type instead of var everywhere
csharp_style_var_elsewhere = false:warning
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = false:warning

# Encourage to use more modern language features
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_object_initializer = true:warning

# Suggest more modern language features when available
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion

# Naming rules
## Non-private fields are PascalCase
dotnet_naming_rule.non_private_fields_should_be_pascal_case.import_to_resharper = as_predefined
dotnet_naming_rule.non_private_fields_should_be_pascal_case.resharper_style = AaBb
dotnet_naming_rule.non_private_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_fields_should_be_pascal_case.symbols = non_private_fields
dotnet_naming_rule.non_private_fields_should_be_pascal_case.style = non_private_field_style

dotnet_naming_symbols.non_private_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_fields.applicable_kinds = field

dotnet_naming_style.non_private_field_style.capitalization = pascal_case

## Private fields are camelCase
dotnet_naming_rule.private_fields_should_be_camel_case.import_to_resharper = as_predefined
dotnet_naming_rule.private_fields_should_be_camel_case.resharper_style = aaBb, is + AaBb
dotnet_naming_rule.private_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.private_fields_should_be_camel_case.style = private_field_style
dotnet_naming_rule.private_fields_should_be_camel_case.symbols = private_fields

dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_fields.applicable_kinds = field

dotnet_naming_style.private_field_style.capitalization = camel_case

## Const fields are PascalCase
dotnet_naming_rule.const_fields_should_be_pascal_case.import_to_resharper = as_predefined
dotnet_naming_rule.const_fields_should_be_pascal_case.resharper_style = AaBb
dotnet_naming_rule.const_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.const_fields_should_be_pascal_case.symbols = const_fields
dotnet_naming_rule.const_fields_should_be_pascal_case.style = const_field_style

dotnet_naming_symbols.const_fields.applicable_accessibilities = *
dotnet_naming_symbols.const_fields.applicable_kinds = field
dotnet_naming_symbols.const_fields.required_modifiers = const

dotnet_naming_style.const_field_style.capitalization = pascal_case

## Static fields are PascalCase
dotnet_naming_rule.static_fields_should_be_pascal_case.import_to_resharper = as_predefined
dotnet_naming_rule.static_fields_should_be_pascal_case.resharper_style = AaBb
dotnet_naming_rule.static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.static_fields_should_be_pascal_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_pascal_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_accessibilities = private
dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static, readonly

dotnet_naming_style.static_field_style.capitalization = pascal_case

## Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.import_to_resharper = as_predefined
dotnet_naming_rule.locals_should_be_camel_case.resharper_style = aaBb, is + AaBb
dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.style = locals_style
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals

dotnet_naming_symbols.locals.applicable_accessibilities = *
dotnet_naming_symbols.locals.applicable_kinds = local, parameter

dotnet_naming_style.locals_style.capitalization = camel_case

## Methods are PascalCase
dotnet_naming_rule.methods_should_be_pascal_case.import_to_resharper = as_predefined
dotnet_naming_rule.methods_should_be_pascal_case.resharper_style = AaBb
dotnet_naming_rule.methods_should_be_pascal_case.severity = warning
dotnet_naming_rule.methods_should_be_pascal_case.style = methods_style
dotnet_naming_rule.methods_should_be_pascal_case.symbols = methods

dotnet_naming_symbols.methods.applicable_accessibilities = *
dotnet_naming_symbols.methods.applicable_kinds = method, local_function

dotnet_naming_style.methods_style.capitalization = pascal_case

# Disable globalization warnings
dotnet_diagnostic.CA1303.severity = none
dotnet_diagnostic.CA1304.severity = none
dotnet_diagnostic.CA1305.severity = none
dotnet_diagnostic.CA1307.severity = none
dotnet_diagnostic.CA1309.severity = none
dotnet_diagnostic.CA1310.severity = none
dotnet_diagnostic.CA1311.severity = none

# Enforce curly braces even for one line code block (with ReSharper fallback)
csharp_prefer_braces = true:warning
resharper_braces_for_for = required
resharper_braces_for_foreach = required
resharper_braces_for_ifelse = required
resharper_braces_for_while = required
resharper_enforce_do_while_statement_braces_highlighting = warning
resharper_enforce_foreach_statement_braces_highlighting = warning
resharper_enforce_for_statement_braces_highlighting = warning
resharper_enforce_if_statement_braces_highlighting = warning
resharper_enforce_while_statement_braces_highlighting = warning
